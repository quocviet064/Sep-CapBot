import { Table, Input, Tag, Button, Card } from "antd";
import { ChangeEvent, useState } from "react";
import { useNavigate } from "react-router-dom";

const { Search } = Input;

type Topic = {
  id: string;
  title: string;
  studentName: string;
  category: string;
  status: "pending" | "approved" | "rejected";
  createdAt: string;
};

const mockTopics: Topic[] = [
  {
    id: "TP001",
    title: "AI h·ªó tr·ª£ ph√¢n lo·∫°i t√†i li·ªáu h·ªçc thu·∫≠t",
    studentName: "Nguy·ªÖn VƒÉn A",
    category: "AI",
    status: "pending",
    createdAt: "2025-07-15",
  },
  {
    id: "TP002",
    title: "H·ªá th·ªëng qu·∫£n l√Ω ƒëi·ªÉm danh b·∫±ng khu√¥n m·∫∑t",
    studentName: "Tr·∫ßn Th·ªã B",
    category: "Computer Vision",
    status: "approved",
    createdAt: "2025-07-10",
  },
  {
    id: "TP003",
    title: "T·ªëi ∆∞u h√≥a thu·∫≠t to√°n ph√¢n c·ª•m d·ªØ li·ªáu",
    studentName: "L√™ VƒÉn C",
    category: "Data Mining",
    status: "rejected",
    createdAt: "2025-07-12",
  },
  {
    id: "TP004",
    title: "·ª®ng d·ª•ng chatbot trong t∆∞ v·∫•n s·ª©c kh·ªèe",
    studentName: "Ph·∫°m Minh D",
    category: "AI",
    status: "approved",
    createdAt: "2025-07-08",
  },
  {
    id: "TP005",
    title: "X√¢y d·ª±ng h·ªá th·ªëng ƒë·ªÅ xu·∫•t phim",
    studentName: "Ho√†ng Th·ªã E",
    category: "Machine Learning",
    status: "pending",
    createdAt: "2025-07-09",
  },
  {
    id: "TP006",
    title: "Nh·∫≠n di·ªán khu√¥n m·∫∑t th·ªùi gian th·ª±c",
    studentName: "ƒê·∫∑ng VƒÉn F",
    category: "Computer Vision",
    status: "approved",
    createdAt: "2025-07-06",
  },
  {
    id: "TP007",
    title: "Ph√¢n t√≠ch c·∫£m x√∫c t·ª´ b√†i ƒëƒÉng m·∫°ng x√£ h·ªôi",
    studentName: "L√Ω Th·ªã G",
    category: "NLP",
    status: "pending",
    createdAt: "2025-07-04",
  },
  {
    id: "TP008",
    title: "H·ªá th·ªëng gi√°m s√°t h·ªçc sinh b·∫±ng AI",
    studentName: "Tr·ªãnh C√¥ng H",
    category: "AI",
    status: "rejected",
    createdAt: "2025-07-05",
  },
  {
    id: "TP009",
    title: "X√¢y d·ª±ng website h·ªçc t·ª´ v·ª±ng th√¥ng minh",
    studentName: "Phan Minh I",
    category: "Web",
    status: "approved",
    createdAt: "2025-07-01",
  },
  {
    id: "TP010",
    title: "T·ª± ƒë·ªông ph√°t hi·ªán gian l·∫≠n trong thi c·ª≠",
    studentName: "Tr·∫ßn VƒÉn J",
    category: "AI",
    status: "pending",
    createdAt: "2025-07-03",
  },
  {
    id: "TP011",
    title: "D·ª± ƒëo√°n th·ªùi gian ho√†n th√†nh d·ª± √°n ph·∫ßn m·ªÅm",
    studentName: "Nguy·ªÖn VƒÉn K",
    category: "Data Science",
    status: "approved",
    createdAt: "2025-06-28",
  },
  {
    id: "TP012",
    title: "T·ªëi ∆∞u h·ªá th·ªëng truy xu·∫•t t√†i li·ªáu y t·∫ø",
    studentName: "B√πi Th·ªã L",
    category: "HealthTech",
    status: "pending",
    createdAt: "2025-06-30",
  },
  {
    id: "TP013",
    title: "X√¢y d·ª±ng h·ªá th·ªëng ƒë√°nh gi√° nƒÉng l·ª±c sinh vi√™n",
    studentName: "ƒêo√†n VƒÉn M",
    category: "EdTech",
    status: "approved",
    createdAt: "2025-06-25",
  },
  {
    id: "TP014",
    title: "Ph√¢n t√≠ch t√≠n hi·ªáu EEG ph·ª•c v·ª• ch·∫©n ƒëo√°n",
    studentName: "T·∫° Th·ªã N",
    category: "Biomedical",
    status: "rejected",
    createdAt: "2025-06-20",
  },
  {
    id: "TP015",
    title: "D·ª± b√°o t·ªâ gi√° ngo·∫°i t·ªá b·∫±ng h·ªçc s√¢u",
    studentName: "Tr·ªãnh VƒÉn O",
    category: "Finance",
    status: "pending",
    createdAt: "2025-06-18",
  },
  {
    id: "TP016",
    title: "Qu·∫£n l√Ω t√†i li·ªáu s·ªë b·∫±ng blockchain",
    studentName: "Ho√†ng Minh P",
    category: "Blockchain",
    status: "approved",
    createdAt: "2025-06-15",
  },
  {
    id: "TP017",
    title: "Chatbot h·ªçc ti·∫øng Anh cho tr·∫ª em",
    studentName: "Ph·∫°m Th·ªã Q",
    category: "NLP",
    status: "pending",
    createdAt: "2025-06-13",
  },
  {
    id: "TP018",
    title: "H·ªá th·ªëng b√°o c√°o t·ª± ƒë·ªông trong doanh nghi·ªáp",
    studentName: "V√µ VƒÉn R",
    category: "Business Intelligence",
    status: "approved",
    createdAt: "2025-06-10",
  },
  {
    id: "TP019",
    title: "Ch·∫©n ƒëo√°n b·ªánh t·ª´ h√¨nh ·∫£nh X-ray",
    studentName: "Nguy·ªÖn Th·ªã S",
    category: "AI",
    status: "rejected",
    createdAt: "2025-06-07",
  },
  {
    id: "TP020",
    title: "Ph√°t hi·ªán m√£ ƒë·ªôc qua h√†nh vi ng∆∞·ªùi d√πng",
    studentName: "ƒê·∫∑ng VƒÉn T",
    category: "Cyber Security",
    status: "pending",
    createdAt: "2025-06-04",
  },
];

export default function AllTopicsPage() {
  const [searchText, setSearchText] = useState("");
  const navigate = useNavigate();

  const filteredTopics = mockTopics.filter((topic) =>
    topic.title.toLowerCase().includes(searchText.toLowerCase()),
  );

  const columns = [
    {
      title: "M√£",
      dataIndex: "id",
      key: "id",
    },
    {
      title: "T√™n ƒë·ªÅ t√†i",
      dataIndex: "title",
      key: "title",
    },
    {
      title: "Sinh vi√™n",
      dataIndex: "studentName",
      key: "studentName",
    },
    {
      title: "Danh m·ª•c",
      dataIndex: "category",
      key: "category",
    },
    {
      title: "Tr·∫°ng th√°i",
      dataIndex: "status",
      key: "status",
      render: (status: Topic["status"]) => {
        let color = "";
        let label = "";
        switch (status) {
          case "approved":
            color = "green";
            label = "ƒê√£ duy·ªát";
            break;
          case "rejected":
            color = "red";
            label = "T·ª´ ch·ªëi";
            break;
          default:
            color = "gold";
            label = "Ch·ªù duy·ªát";
        }
        return <Tag color={color}>{label}</Tag>;
      },
    },
    {
      title: "Ng√†y t·∫°o",
      dataIndex: "createdAt",
      key: "createdAt",
    },
    {
      title: "H√†nh ƒë·ªông",
      key: "action",
      render: (_: unknown, record: Topic) => (
        <Button onClick={() => navigate(`/topics/${record.id}`)}>Xem</Button>
      ),
    },
  ];

  return (
    <div style={{ padding: 24 }}>
      <Card title="üìö T·∫•t c·∫£ ƒë·ªÅ t√†i">
        <Search
          placeholder="T√¨m ki·∫øm t√™n ƒë·ªÅ t√†i..."
          onChange={(e: ChangeEvent<HTMLInputElement>) =>
            setSearchText(e.target.value)
          }
          style={{ marginBottom: 16, maxWidth: 400 }}
        />
        <Table
          columns={columns}
          dataSource={filteredTopics}
          rowKey="id"
          pagination={{ pageSize: 5 }}
        />
      </Card>
    </div>
  );
}
